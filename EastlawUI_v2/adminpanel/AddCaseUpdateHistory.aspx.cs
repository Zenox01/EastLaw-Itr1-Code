using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Globalization;

namespace EastlawUI_v2.adminpanel
{
    public partial class AddCaseUpdateHistory : System.Web.UI.Page
    {
        EastLawBL.Cases objCases = new EastLawBL.Cases();
        protected void Page_Load(object sender, EventArgs e)
        {
            try
            {
                if (!Page.IsPostBack)
                {
                    if (Session["UserID"] == null)
                    {
                        Response.Redirect("default.aspx");
                    }
                    if (!ValidateUserGroup.ValidateGroup(int.Parse(Session["UserTypeID"].ToString()), ValidateUserGroup.getPageName(Request.Url.AbsolutePath)))
                        Response.Redirect("NotAuthorize.aspx");
                    LoadYears();

                    if (Request.QueryString["param"] != null)
                        GetCases(int.Parse(EncryptDecryptHelper.Decrypt(Request.QueryString["param"].ToString())));
                   
                }
            }
            catch (Exception ex)
            {
                ExceptionHandling.SendErrorReport("AddCaseUpdateHistory.aspx", "Page_Load", ex.Message);
            }
        }
        void LoadYears()
        {
            // Clear items:    
            ddlYear.Items.Clear();
            // Add default item to the list
            ddlYear.Items.Insert(0, new ListItem("Select", "0"));
            // Start loop
            for (int i = 0; i < 69; i++)
            {
                // For each pass add an item
                // Add a number of years (negative, which will subtract) to current year
                ddlYear.Items.Add(DateTime.Now.AddYears(-i).Year.ToString());
            }

            for (int i = 1; i < 201; i++)
            {
                // For each pass add an item
                // Add a number of years (negative, which will subtract) to current year
                ddlYear.Items.Add(i.ToString());

            }
        }
        void GetCases(int ID)
        {
            try
            {
                DataTable dt = new DataTable();
                dt = objCases.GetCaseHistoryForUpdate(ID);
                if(dt.Rows.Count == 0)
                    dt = objCases.GetCases(ID);

                if(dt.Rows.Count > 0)
                {
                    
                    ddlYear.SelectedValue = dt.Rows[0]["Year"].ToString();
                    txtCitation.Text = dt.Rows[0]["Citation"].ToString();
                    txtAutoGeneratedCitation.Text = dt.Rows[0]["CitationRef"].ToString();
                    txtAppeal.Text = dt.Rows[0]["Appeal"].ToString();
                    txtAppeallant.Text = dt.Rows[0]["Appeallant"].ToString();
                    txtAppeallantType.Text = dt.Rows[0]["AppeallantType"].ToString();
                    txtRespondent.Text = dt.Rows[0]["Respondent"].ToString();
                    txtJDate.Text = dt.Rows[0]["JDate"].ToString();
                    txtHearDate.Text = dt.Rows[0]["HearDate"].ToString();
                    editorHeadNotes.Content = dt.Rows[0]["HeadNotes"].ToString();
                    editorJudgment.Content = dt.Rows[0]["Judgment"].ToString();
                    txtJudgmentType.Text = dt.Rows[0]["JudgmentType"].ToString();
                    txtResult.Text = dt.Rows[0]["Result"].ToString();
                    txtCourt.Text = dt.Rows[0]["Court"].ToString();
                    txtCourtCityName.Text = dt.Rows[0]["Court_Area"].ToString();
                    txtPageNo.Text = dt.Rows[0]["PageNo"].ToString();
                    lblFileName.Text = dt.Rows[0]["uploadfilename"].ToString();
                    txtKeywords.Text = dt.Rows[0]["Keywords"].ToString();


                    lblJudgeID.Text = dt.Rows[0]["Judge"].ToString();
                    lblJudge.Text = dt.Rows[0]["JudgeName"].ToString();
                }

            }
            catch (Exception e)
            {
                ExceptionHandling.SendErrorReport("AddCaseUpdateHistory.aspx", "GetCases", e.Message);
            }
        }
        void EditRecord(int CaseID)
        {
            try
            {
                if (ValidateDate(txtJDate.Text.Trim()) == 1)
                {
                    objCases.Status = 2;
                    objCases.Year = int.Parse(ddlYear.SelectedValue);
                    objCases.Citation = txtCitation.Text.Trim();
                    objCases.CitationRef = txtAutoGeneratedCitation.Text.Trim();
                    objCases.JudgeStr = txtJudgeName.Text;
                    objCases.Appeal = txtAppeal.Text.Trim();
                    objCases.Appeallant = txtAppeallant.Text.Trim();
                    objCases.AppeallantType = txtAppeallantType.Text.Trim();
                    objCases.Respondent = txtRespondent.Text.Trim();
                    objCases.JDate = txtJDate.Text.Trim();
                    objCases.HearDate = txtHearDate.Text.Trim();
                    objCases.HeadNotes = editorHeadNotes.Content;
                    objCases.Judgment = editorJudgment.Content;
                    objCases.JudgmentType = txtJudgmentType.Text.Trim();
                    objCases.Result = txtResult.Text.Trim();
                    objCases.Court = txtCourt.Text.Trim();
                    objCases.CreatedBy = int.Parse(Session["UserID"].ToString());
                    objCases.CourtCityName = txtCourtCityName.Text;
                    objCases.FileName = lblFileName.Text;
                    objCases.PageNo = txtPageNo.Text;
                    objCases.Keywords = txtKeywords.Text;
                    int chk = objCases.InsertCaseUpdateHistory(CaseID);
                    if (chk > 0)
                    {
                        divSuccess.Style["Display"] = "";
                        divError.Style["Display"] = "none";
                        // ClearFields();

                    }
                    else
                    {
                        divSuccess.Style["Display"] = "none";
                        divError.Style["Display"] = "";
                    }
                }
                else
                {
                    divError.InnerText = "Judgment Date is not correct";
                    divError.Style["Display"] = "";
                }
            }
            catch (Exception ex)
            { }
        }
        int ValidateDate(string Date)
        {
            DateTime dateValue;
            if (DateTime.TryParseExact(Date, "dd/MM/yyyy", new CultureInfo("en-US"), DateTimeStyles.None, out dateValue))
                return 1;
            else
                return 0;
        }
        protected void btnCancel_Click(object sender, EventArgs e)
        {
            //ClearFields();
        }
        protected void btnSave_Click(object sender, EventArgs e)
        {
            try
            {
                if (Request.QueryString["param"] != null)
                    EditRecord(int.Parse(EncryptDecryptHelper.Decrypt(Request.QueryString["param"].ToString())));
                

            }
            catch (Exception ex)
            {
                ExceptionHandling.SendErrorReport("ReviewCasesMigration.aspx", "btnSave_Click", ex.Message);
            }
        }

        protected void btnDelete_Click(object sender, EventArgs e)
        {
            try
            {
                int chk = objCases.DeleteCasesID(int.Parse(EncryptDecryptHelper.Decrypt(Request.QueryString["param"].ToString())),int.Parse(Session["UserID"].ToString()));
                if (chk > 0)
                {
                    divSuccess.Style["Display"] = "";
                    divError.Style["Display"] = "none";
                    // ClearFields();

                }
                else
                {
                    divSuccess.Style["Display"] = "none";
                    divError.Style["Display"] = "";
                }
            }
            catch { }
        }

    }
}